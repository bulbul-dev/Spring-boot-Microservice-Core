


// docker: new plugin
buildscript {
    dependencies {
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.22.1"
    }
}


plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.palantir.docker" version "0.22.1"
}

group = 'com.microservice'
version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}



dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '3.1.0'
//    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation group: 'io.github.resilience4j', name: 'resilience4j-spring-boot2', version: '1.7.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.6.3'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.3'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


// docker: plugin apply
apply plugin: 'com.palantir.docker'

// docker: new task docker
docker {
    dependsOn build
    name "${project.name}"
    files bootJar.archiveFile
    buildArgs(['JAR_FILE': "${bootJar.archiveFileName}"])
    tag 'DockerHub', "<bulbuldevops>/user-service:${project.version}"
}




tasks.named('test') {
    useJUnitPlatform()
}
